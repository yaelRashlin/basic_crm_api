name: Docker Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        python scripts/run_tests.py
  
  docker:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: |
        docker build -t user-management-server:test -f docker/Dockerfile .
    
    - name: Test Docker image
      run: |
        # Start container in background
        docker run -d -p 5000:5000 --name test-container user-management-server:test
        
        # Wait for container to be ready
        sleep 10
        
        # Install requests for testing
        pip install requests
        
        # Run Docker integration test
        python scripts/test_docker.py http://localhost:5000
        
        # Stop container
        docker stop test-container
    
    - name: Test Docker Compose
      run: |
        # Test docker-compose build
        docker-compose -f docker/docker-compose.prod.yml build
        
        # Test docker-compose up (in background)
        docker-compose -f docker/docker-compose.prod.yml up -d
        
        # Wait for services to be ready
        sleep 15
        
        # Test the service
        curl -f http://localhost:5000/health || exit 1
        
        # Clean up
        docker-compose -f docker/docker-compose.prod.yml down
    
    - name: Clean up
      if: always()
      run: |
        docker stop test-container || true
        docker rm test-container || true
        docker-compose -f docker/docker-compose.prod.yml down || true